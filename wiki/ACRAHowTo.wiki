#labels Phase-Deploy
= Introduction =

ACRA allows your Android application to send Crash Reports in a Google Docs spreadsheet.
This tutorial will guide you in installing ACRA in your application project.

= Details =

Step by step installation of the ACRA library in an existing application project:
  * Get http://acra.googlecode.com/files/ACRA-1.0.0.zip and open the archive (CrashReport/doc/)
  * Login to your Google Docs account
  * Import the {{{CrashReports-template.xls}}} contained in the archive
  * Open the imported document
  * Rename it as you like
  * Forms / Create form
  * Add anything in the form description just to enable the *Save* button
  * Save the form
  * Copy the {{{formId}}} displayed in the link at the bottom of the form creation page
  * Open your Eclipse project
  * Create a {{{lib}}} folder
  * Add the {{{acra-1.0.0.jar}}} from the archive (CrashReport/build) in the {{{lib}}} folder
  * Right-click on the jar file / add to build path
  * Create a new class in your package root
    * Give it a name like : {{{MyApplication}}}, make it extend {{{org.acra.CrashReportingApplication}}}
    * Override the abstract {{{getFormId()}}} method, returning a simple String containing the form Id of your Google Docs form :

{{{
    @Override
    public String getFormId() {
        return "dGVacG0ydHVnaHNjRjVTUTEtb3FPWGc6MQ";
    }
}}}

  * Open the android manifest editor ({{{AndroidManifest.xml}}}
    * In the *Application tab*, click on the *Browse* button next to the *Name* field
    * Select your newly created Application class ({{{MyApplication}}})
    * In the *Permissions* tab, add a *Uses Permission* object with value {{{android.permission.INTERNET}}}
  * *_THE END_* - next time your application crashes, it adds a line to your Google Docs spreadsheet :-).

= Advanced Usage =

== How-to use it to send a report to my own php/java/python/whateveryouwant slef-hosted script ?

Just override the getFormUri() in your Application class extending CrashReportingApplication :

{{{
    public Uri getFormUri() {
        return Uri.parse("http://myserver.com/myscript);
    }
}}}