
ACRA-3.0.0
  * Fixed an issue on the SharedPreferences listener which could lead to user preferences changes for reports activation state not being applied before a full application restart.
  * Fixed Issue 10 : sending a report with handleException() or handleSilentException(), the report was sent on the UI Thread. This could lead to application hanging if network conditions were bad.
  * Addition of 5 fields in the reports:
    * initial_config: the Configuration on application start
    * crash_config: the Configuration when the application crashed
    * display: display specs
    * user_comment: user comment has now it's own field and is not added in the dev custom data anymore
    * user_crash_date: the user exact local date/time of the crash (the google doc timestamp is the report reception time, but the transmission might have been delayed from the real crash time)
  * ACRA Configuration is now based on a @ReportsCrashes annotation and not on extending CrashReportingApplication anymore. See [http://acra.googlecode.com/svn/trunk/CrashReport/javadoc/org/acra/annotation/ReportsCrashes.html @ReportsCrashes javadoc] for configuration details.

ACRA-2.1.0
  * Status Bar Notification / Dialog
    * Relaunching crashed app from home key recent app shortcut should not display crash report dialog again (Issue 6). You will need to update your manifest to add two attributes to your {{{CrashReportDialog}}} Activity declaration ({{{excludeFromRecents and finishOnTaskLaunch}}}):
    {{{    
    <activity android:name="org.acra.CrashReportDialog"
        android:theme="@android:style/Theme.Dialog"
        android:launchMode="singleInstance"
        android:excludeFromRecents="true"
        android:finishOnTaskLaunch="true" />
    }}}

  * Pending on-demand silent notifications (Issue 7). When using ACRA with Toast or Notification mode, sending a silent report with {{{ErrorReporter.handleSilentException()}}} could result to a user notification if the silent report could not be sent immediately. There was nothing stored indicating that it was silent so they were processed like any other crash report. This should now be fixed in ACRA 2.1. 

  * Provide a way to override the preferences name for storing 'acra.disable' (Issue 4). You can now override {{{CrashReportingApplication.getACRASharedPreferences()}}} in your {{{Application}}} class and return any SharedPreferences object. ACRA will listen to changes on these {{{SharedPreferences}}} to detect user enabling/disabling crash reports in your preferences screen. If you don't override the method, the {{{Application}}} default {{{SharedPreferences}}} are used.

  * Provide a way to let the developers chose to make users *check* a preference *to enable* crash reports (requested in a comment of Issue 4) instead of *checking to disable*. You can now alternatively use the preference name '{{{acra.enable}}}'. It has the opposite effect of '{{{acra.disable}}}'. 
